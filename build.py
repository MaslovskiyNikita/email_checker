# build.py (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
import os
import sys
import subprocess
import shutil
import platform
from pathlib import Path

def get_platform_config():
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º"""
    if platform.system() == "Windows":
        return {
            'exe_name': 'EmailFinder.exe',
            'separator': ';',
            'python_cmd': 'python'
        }
    else:
        return {
            'exe_name': 'EmailFinder',
            'separator': ':',
            'python_cmd': sys.executable
        }

def check_wine():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Wine –Ω–∞ Linux"""
    if platform.system() != "Windows":
        try:
            subprocess.run(['wine', '--version'], capture_output=True, check=True)
            return True
        except:
            return False
    return True

def build_exe():
    """–°–±–æ—Ä–∫–∞ EXE —Ñ–∞–π–ª–∞"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É EXE —Ñ–∞–π–ª–∞...")
    
    config = get_platform_config()
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏
    build_dir = "build"
    dist_dir = "dist"
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–±–æ—Ä–∫–∏
    for dir_name in [build_dir, dist_dir]:
        if os.path.exists(dir_name):
            shutil.rmtree(dir_name)
            print(f"üßπ –û—á–∏—â–µ–Ω–∞ –ø–∞–ø–∫–∞: {dir_name}")
    
    # –ö–æ–º–∞–Ω–¥–∞ PyInstaller
    cmd = [
        config['python_cmd'], "-m", "PyInstaller",
        "--onefile",
        "--windowed",
        f"--name=EmailFinder",
        f"--add-data=email_checker{config['separator']}email_checker",
        "--hidden-import=tkinter",
        "--hidden-import=requests",
        "--hidden-import=bs4",
        "--hidden-import=urllib3",
        "--hidden-import=concurrent.futures",
        "--hidden-import=queue",
        "--hidden-import=logging",
        "--hidden-import=json",
        "--hidden-import=re",
        "--hidden-import=time",
        "--hidden-import=datetime",
        "--hidden-import=random",
        "--hidden-import=socket",
        "--hidden-import=threading",
        "--hidden-import=os",
        "--hidden-import=sys",
        "--hidden-import=urllib.parse",
        "--clean",
        "main.py"
    ]
    
    # –ï—Å–ª–∏ –Ω–∞ Linux –∏ –µ—Å—Ç—å Wine, –¥–æ–±–∞–≤–ª—è–µ–º wine –≤ –Ω–∞—á–∞–ª–æ –∫–æ–º–∞–Ω–¥—ã
    if platform.system() != "Windows" and check_wine():
        print("üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω Wine, –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–±—Ä–∞—Ç—å Windows EXE...")
        cmd = ['wine'] + cmd
        config['exe_name'] = 'EmailFinder.exe'
    
    try:
        print("üî® –ó–∞–ø—É—Å–∫ PyInstaller...")
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ EXE —Ñ–∞–π–ª–∞
        exe_path = os.path.join(dist_dir, config['exe_name'])
        
        if os.path.exists(exe_path):
            print(f"üéâ EXE —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {exe_path}")
            print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(exe_path) / (1024*1024):.2f} MB")
            
            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è
            release_dir = "release"
            if not os.path.exists(release_dir):
                os.makedirs(release_dir)
            
            # –ö–æ–ø–∏—Ä—É–µ–º EXE —Ñ–∞–π–ª
            shutil.copy2(exe_path, os.path.join(release_dir, config['exe_name']))
            
            # –°–æ–∑–¥–∞–µ–º README –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            create_readme(release_dir)
            
            print(f"üì¶ –§–∞–π–ª—ã –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –≤ –ø–∞–ø–∫–µ: {release_dir}")
            
        else:
            print("‚ùå EXE —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        if e.stderr:
            print(f"Stderr: {e.stderr}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

def create_readme(release_dir):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ README"""
    readme_content = """# Email Finder - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞
1. –°–∫–∞—á–∞–π—Ç–µ EmailFinder.exe
2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª
3. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
- –í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
- –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∞–π—Ç–æ–≤
- –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"

## –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ
–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.
"""
    
    with open(os.path.join(release_dir, "README.txt"), 'w', encoding='utf-8') as f:
        f.write(readme_content)

if __name__ == "__main__":
    build_exe()